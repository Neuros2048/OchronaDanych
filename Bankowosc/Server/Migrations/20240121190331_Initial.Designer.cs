// <auto-generated />
using System;
using Bankowosc.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bankowosc.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240121190331_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bankowosc.Server.Entities.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<decimal>("Money")
                        .HasColumnType("decimal(19,4)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Acounts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccountNumber = "11111111111111111111111111",
                            Money = 1000.50m,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            AccountNumber = "11111111111111111111111112",
                            Money = 500.75m,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            AccountNumber = "11111111111111111111111113",
                            Money = 2000.30m,
                            UserId = 3L
                        });
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.BlockAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("UserNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("UserNumber")
                        .IsUnique();

                    b.ToTable("BlockAccounts");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.CreditCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AcountId")
                        .HasColumnType("bigint");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Iv")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numbers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AcountId")
                        .IsUnique();

                    b.ToTable("CreditCredits");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AcountId = 1L,
                            EndDate = "obuXIE1EfRMyZDytXiRRZw==",
                            Iv = new byte[] { 132, 232, 151, 124, 148, 101, 125, 142, 245, 82, 216, 243, 100, 62, 137, 178 },
                            Name = "kVDJ51Ftwhuc7uPwB+Hepg==",
                            Numbers = "RiHRxCNJ7ekNwF+7/HYr3INYRXVMwrqJAQA1+U++rgo=",
                            Pin = "$2a$16$AtVSqRtjtQPvgVZkQeEsL.DNZ/af6uE7khAw49.q75tI41sKqpaNq",
                            SpecialNumber = "sLZYUMajdj8Zo3cRWiO6fQ=="
                        },
                        new
                        {
                            Id = 2L,
                            AcountId = 2L,
                            EndDate = "503ATEUPqB5TRZX8jUi7Sg==",
                            Iv = new byte[] { 129, 250, 49, 30, 11, 216, 20, 233, 195, 81, 66, 29, 73, 176, 184, 30 },
                            Name = "hFDYcFEutliMtaltC+T6Jg==",
                            Numbers = "0LBx8Y+Phg0ULt6Jsy7Wu2xITc4nUgG27TBxM9eXt/Q=",
                            Pin = "$2a$16$VOxlSpEafYjbrBISipCazOPhYQng/hZvkE8EWyDCcP4rTEkFu5b8O",
                            SpecialNumber = "NFgZ1POI3ruOfBQVJaTJjQ=="
                        },
                        new
                        {
                            Id = 3L,
                            AcountId = 3L,
                            EndDate = "RuKwDsDXTbLmll+Bm/aogA==",
                            Iv = new byte[] { 95, 140, 14, 177, 179, 25, 248, 64, 38, 41, 12, 18, 79, 243, 73, 12 },
                            Name = "AwiePtLQNyP7K+vFZ9a4Tw==",
                            Numbers = "5TnH0okeB7qCbsEz+63Jq879Lo1ol6QjzMpDOu2ShTM=",
                            Pin = "$2a$16$.VvJNl6dTawR3kWGcvj4GejYNOIsyuecVNOOlMJL5Z/GqTFpGziSC",
                            SpecialNumber = "XfZWqFNb26XjNRLAoFuyTw=="
                        });
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccountNumberReceiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumberSender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("AcountReceiverId")
                        .HasColumnType("bigint");

                    b.Property<long>("AcountSenderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Iv")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<decimal>("Money")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AcountReceiverId");

                    b.HasIndex("AcountSenderId");

                    b.ToTable("TransacionHistory");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ClientNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Iv")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientNumber")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClientNumber = "4732129813",
                            DateCreated = new DateTime(2024, 1, 21, 20, 3, 31, 743, DateTimeKind.Local).AddTicks(160),
                            Email = "zc8wJ7ZvPxGk5lGyXvs1NoH7D/eXmDmceXcvByVuZtc=",
                            Iv = new byte[] { 231, 58, 156, 240, 65, 101, 120, 33, 37, 158, 122, 119, 176, 16, 61, 40 },
                            PasswordHash = "$2a$16$6TRN/d4k5iDejsbBWokESebo.guEHPvUtMXM0KqBzbaZhmClQyrH.",
                            Pesel = "HyjZ/G9t22Y9u1aJ+6MZGA==",
                            PhoneNumber = "2nAEkLTaTva8tcoiNs6bdw==",
                            Role = 0,
                            Username = "BVfQpFAOn9ae4SZ9rnaOe0WUgQW9qVRkjrDBPXNLOHk="
                        },
                        new
                        {
                            Id = 2L,
                            ClientNumber = "3718005120",
                            DateCreated = new DateTime(2024, 1, 21, 20, 3, 31, 743, DateTimeKind.Local).AddTicks(912),
                            Email = "tffoZQtTRYAkKJvMyWCN51bd9whQJtlNvRQnMrO5/KU=",
                            Iv = new byte[] { 113, 192, 35, 145, 152, 233, 174, 212, 240, 132, 248, 196, 101, 91, 101, 111 },
                            PasswordHash = "$2a$16$fRunnfJCi/Vi7SauYSoRMO6jfhtO2bquah7XZMJGzdkzZxaTZdHsG",
                            Pesel = "NQMmBadTcb0VKnSScEmkoQ==",
                            PhoneNumber = "B9jWJqzXVUN8bzwG0Tz89g==",
                            Role = 0,
                            Username = "kdbYToBGBLydZezRxbjY7A=="
                        },
                        new
                        {
                            Id = 3L,
                            ClientNumber = "9381230124",
                            DateCreated = new DateTime(2024, 1, 21, 20, 3, 31, 743, DateTimeKind.Local).AddTicks(1074),
                            Email = "h33h6koqZQMLr4Z6A1cffOGkb7BDWi4wUAGNYBxqqIY=",
                            Iv = new byte[] { 172, 252, 68, 32, 172, 28, 155, 122, 245, 17, 91, 83, 59, 195, 67, 99 },
                            PasswordHash = "$2a$16$Uh3cuvQzs3oe60TzDDR9q.Zli525RGU5rtyDLDoIRI7vrK6ogVWZG",
                            Pesel = "uA5Lz8TfbxovcqOedokwLQ==",
                            PhoneNumber = "3SWqp4COlQlLIdL5zUGV9A==",
                            Role = 0,
                            Username = "luJQHFzZEo0ZhzISTN+ECg=="
                        },
                        new
                        {
                            Id = 4L,
                            ClientNumber = "4398309612",
                            DateCreated = new DateTime(2024, 1, 21, 20, 3, 31, 743, DateTimeKind.Local).AddTicks(1215),
                            Email = "XVZT7qhxq1SU7xNE9tS4+QModpSmDo57zLu2+PPXWck=",
                            Iv = new byte[] { 123, 192, 36, 1, 248, 171, 37, 76, 113, 118, 68, 166, 76, 7, 19, 209 },
                            PasswordHash = "$2a$16$pKK0/EPMqLeDrwcDfU2xMOHUfExqE4ALg13eRv2sU1olmeXXokkxi",
                            Pesel = "MgRGSvx0a901oKd6sRUlfA==",
                            PhoneNumber = "YmJige1K8Q/1OZYJUgFiOQ==",
                            Role = 1,
                            Username = "KWeLxXOsNR+2b1FtdF+Te90uZAs7cEHV0v9BSMryiDQ="
                        });
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Account", b =>
                {
                    b.HasOne("Bankowosc.Server.Entities.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("Bankowosc.Server.Entities.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.CreditCard", b =>
                {
                    b.HasOne("Bankowosc.Server.Entities.Account", "Account")
                        .WithOne("CreditCard")
                        .HasForeignKey("Bankowosc.Server.Entities.CreditCard", "AcountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Transaction", b =>
                {
                    b.HasOne("Bankowosc.Server.Entities.Account", "AccountReceiver")
                        .WithMany("TransactionReceived")
                        .HasForeignKey("AcountReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Bankowosc.Server.Entities.Account", "AccountSender")
                        .WithMany("TransactionSend")
                        .HasForeignKey("AcountSenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AccountReceiver");

                    b.Navigation("AccountSender");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Account", b =>
                {
                    b.Navigation("CreditCard")
                        .IsRequired();

                    b.Navigation("TransactionReceived");

                    b.Navigation("TransactionSend");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.User", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
