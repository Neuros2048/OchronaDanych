// <auto-generated />
using System;
using Bankowosc.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bankowosc.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bankowosc.Server.Entities.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<decimal>("Money")
                        .HasColumnType("decimal(19,4)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Acounts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccountNumber = "11111111111111111111111111",
                            Money = 1000.50m,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            AccountNumber = "11111111111111111111111112",
                            Money = 500.75m,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            AccountNumber = "11111111111111111111111113",
                            Money = 2000.30m,
                            UserId = 3L
                        });
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.BlockAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("UserNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("UserNumber")
                        .IsUnique();

                    b.ToTable("BlockAccounts");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.CreditCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AcountId")
                        .HasColumnType("bigint");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Iv")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numbers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AcountId")
                        .IsUnique();

                    b.ToTable("CreditCredits");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AcountId = 1L,
                            EndDate = "kpRVh0i8H4BXEgEyRU0aeQ==",
                            Iv = new byte[] { 153, 245, 155, 31, 14, 55, 101, 63, 177, 191, 218, 239, 51, 57, 33, 4 },
                            Name = "LATA131BSg8+qZmtF50ERg==",
                            Numbers = "MDL9UXLBce3lwScpGoIZKALpd3qKf7xHjR5puyJjb08=",
                            Pin = "$2a$16$AtVSqRtjtQPvgVZkQeEsL.DNZ/af6uE7khAw49.q75tI41sKqpaNq",
                            SpecialNumber = "HaUuvgvTfnhyF7+Axyqx0Q=="
                        },
                        new
                        {
                            Id = 2L,
                            AcountId = 2L,
                            EndDate = "9q0RgbQfkIkxLR/LlPQwKg==",
                            Iv = new byte[] { 161, 93, 0, 15, 146, 171, 37, 133, 28, 69, 108, 214, 112, 192, 190, 98 },
                            Name = "sCxwM+G3IfiHUq3GlVQWGA==",
                            Numbers = "zNemxMOTzdAU6Eq0kK+h9yxi9qYw54jIgbYl0rEK7no=",
                            Pin = "$2a$16$VOxlSpEafYjbrBISipCazOPhYQng/hZvkE8EWyDCcP4rTEkFu5b8O",
                            SpecialNumber = "6JFiaRi61MtsHvi5VIXbFw=="
                        },
                        new
                        {
                            Id = 3L,
                            AcountId = 3L,
                            EndDate = "3AJssOfBa36un3HX9AHKuQ==",
                            Iv = new byte[] { 174, 129, 207, 178, 55, 46, 135, 8, 163, 238, 68, 104, 100, 193, 135, 242 },
                            Name = "OLKQcYA9b5KJ9AqSNNV7eg==",
                            Numbers = "Bq9CaZUYWZCaiV9uFNvZdFGwkTt5CPRyi/HbJgR/N2E=",
                            Pin = "$2a$16$.VvJNl6dTawR3kWGcvj4GejYNOIsyuecVNOOlMJL5Z/GqTFpGziSC",
                            SpecialNumber = "Fg7UAw6A34R/jO0B5Cyqhw=="
                        });
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccountNumberReceiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumberSender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("AcountReceiverId")
                        .HasColumnType("bigint");

                    b.Property<long>("AcountSenderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Iv")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<decimal>("Money")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AcountReceiverId");

                    b.HasIndex("AcountSenderId");

                    b.ToTable("TransacionHistory");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ClientNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Iv")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientNumber")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClientNumber = "4732129813",
                            DateCreated = new DateTime(2024, 1, 20, 22, 23, 7, 24, DateTimeKind.Local).AddTicks(6222),
                            Email = "Gx84vi7an4iK6BmOm334XMX3IH5F/aW2P84sWzh1FQg=",
                            Iv = new byte[] { 155, 14, 174, 156, 139, 120, 152, 214, 15, 2, 60, 23, 213, 243, 114, 48 },
                            PasswordHash = "$2a$16$9y7PkkwBhYZC3KaQuB2AM.1w47pi69/cckSr6LRkl4D3gM8kCajFa",
                            Pesel = "h/TP+QtRpmtu2T5tkJ9shA==",
                            PhoneNumber = "LeFTYBzYJ+m+h26PMvfM6A==",
                            Role = 0,
                            Username = "9WBPXLhjhRk+OYhoUYC2dA=="
                        },
                        new
                        {
                            Id = 2L,
                            ClientNumber = "3718005120",
                            DateCreated = new DateTime(2024, 1, 20, 22, 23, 7, 24, DateTimeKind.Local).AddTicks(6792),
                            Email = "+LjXFJQO+q4wXUJDVtUPlVO//0ruad9wNVGTb3EZE6E=",
                            Iv = new byte[] { 206, 168, 122, 253, 6, 190, 136, 102, 32, 114, 214, 238, 245, 222, 40, 229 },
                            PasswordHash = "$2a$16$etnQx9rN9xWFZvyPmloOSeRua0.sXjMiIMyf5dAfBGckfs3Fo.a8e",
                            Pesel = "f7/VzVDBjpAaePN6mmAeig==",
                            PhoneNumber = "DyMgSOXz4NYukHpROqUcfg==",
                            Role = 0,
                            Username = "soe0O9Fj6z/7PJIiS2RHJw=="
                        },
                        new
                        {
                            Id = 3L,
                            ClientNumber = "9381230124",
                            DateCreated = new DateTime(2024, 1, 20, 22, 23, 7, 24, DateTimeKind.Local).AddTicks(6992),
                            Email = "uusALUpz7Fp6lFfnWjETeFVcm9DF++ONe2GiD1OHA0g=",
                            Iv = new byte[] { 89, 245, 34, 7, 191, 201, 143, 39, 85, 47, 227, 36, 161, 9, 0, 23 },
                            PasswordHash = "$2a$16$Uh3cuvQzs3oe60TzDDR9q.Zli525RGU5rtyDLDoIRI7vrK6ogVWZG",
                            Pesel = "u0pcUwhbqY8B38omuJ2XKA==",
                            PhoneNumber = "NMn+dC4F09zDeLStmRzr1w==",
                            Role = 0,
                            Username = "0Eeyw5zZ0fq1W50FNrnDGg=="
                        });
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Account", b =>
                {
                    b.HasOne("Bankowosc.Server.Entities.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("Bankowosc.Server.Entities.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.CreditCard", b =>
                {
                    b.HasOne("Bankowosc.Server.Entities.Account", "Account")
                        .WithOne("CreditCard")
                        .HasForeignKey("Bankowosc.Server.Entities.CreditCard", "AcountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Transaction", b =>
                {
                    b.HasOne("Bankowosc.Server.Entities.Account", "AccountReceiver")
                        .WithMany("TransactionReceived")
                        .HasForeignKey("AcountReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Bankowosc.Server.Entities.Account", "AccountSender")
                        .WithMany("TransactionSend")
                        .HasForeignKey("AcountSenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AccountReceiver");

                    b.Navigation("AccountSender");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Account", b =>
                {
                    b.Navigation("CreditCard")
                        .IsRequired();

                    b.Navigation("TransactionReceived");

                    b.Navigation("TransactionSend");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.User", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
