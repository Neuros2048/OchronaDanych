// <auto-generated />
using System;
using Bankowosc.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bankowosc.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bankowosc.Server.Entities.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<decimal>("Money")
                        .HasColumnType("decimal(19,4)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Acounts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccountNumber = "11111111111111111111111111",
                            Money = 1000.50m,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            AccountNumber = "11111111111111111111111112",
                            Money = 500.75m,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            AccountNumber = "11111111111111111111111113",
                            Money = 2000.30m,
                            UserId = 3L
                        });
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.BlockAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("UserNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("UserNumber")
                        .IsUnique();

                    b.ToTable("BlockAccounts");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.CreditCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AcountId")
                        .HasColumnType("bigint");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numbers")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialNumber")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("AcountId")
                        .IsUnique();

                    b.HasIndex("Numbers")
                        .IsUnique();

                    b.ToTable("CreditCredits");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccountNumberReceiver")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("AccountNumberSender")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<long>("AcountReceiverId")
                        .HasColumnType("bigint");

                    b.Property<long>("AcountSenderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Money")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AcountReceiverId");

                    b.HasIndex("AcountSenderId");

                    b.ToTable("TransacionHistory");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ClientNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PeselHash")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientNumber")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClientNumber = "4732129813",
                            DateCreated = new DateTime(2024, 1, 19, 22, 32, 53, 519, DateTimeKind.Local).AddTicks(7351),
                            Email = "user1@example.com",
                            PasswordHash = "$2a$11$/mb61PYFJRcQwpgGyR089ujK0CZEBjQwKKX0unXoZbZVTYG/WW3Jm",
                            PeselHash = "a",
                            PhoneNumber = "1234567890",
                            Role = 0,
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2L,
                            ClientNumber = "3718005120",
                            DateCreated = new DateTime(2024, 1, 19, 22, 32, 53, 519, DateTimeKind.Local).AddTicks(7358),
                            Email = "user2@example.com",
                            PasswordHash = "$2a$11$aXmxeKeEc.YAJ.xVyv2TReQAPiqIArKtUO7OFJ1QSxpP2Bn.IpPKq",
                            PeselHash = "a",
                            PhoneNumber = "9876543210",
                            Role = 0,
                            Username = "user2"
                        },
                        new
                        {
                            Id = 3L,
                            ClientNumber = "9381230124",
                            DateCreated = new DateTime(2024, 1, 19, 22, 32, 53, 519, DateTimeKind.Local).AddTicks(7392),
                            Email = "user3@example.com",
                            PasswordHash = "$2a$11$nasG4aM4pQbOM.Rq4i1FBejdUhYEfXwrifah0xwMgffhwmshn.Z/.",
                            PeselHash = "a",
                            PhoneNumber = "5555555555",
                            Role = 0,
                            Username = "user3"
                        });
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Account", b =>
                {
                    b.HasOne("Bankowosc.Server.Entities.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("Bankowosc.Server.Entities.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.CreditCard", b =>
                {
                    b.HasOne("Bankowosc.Server.Entities.Account", "Account")
                        .WithOne("CreditCard")
                        .HasForeignKey("Bankowosc.Server.Entities.CreditCard", "AcountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Transaction", b =>
                {
                    b.HasOne("Bankowosc.Server.Entities.Account", "AccountReceiver")
                        .WithMany("TransactionReceived")
                        .HasForeignKey("AcountReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Bankowosc.Server.Entities.Account", "AccountSender")
                        .WithMany("TransactionSend")
                        .HasForeignKey("AcountSenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AccountReceiver");

                    b.Navigation("AccountSender");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Account", b =>
                {
                    b.Navigation("CreditCard")
                        .IsRequired();

                    b.Navigation("TransactionReceived");

                    b.Navigation("TransactionSend");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.User", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
