// <auto-generated />
using System;
using Bankowosc.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bankowosc.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240116160741_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bankowosc.Server.Entities.Acount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<decimal>("Money")
                        .HasColumnType("Money");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Acounts");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.CreditCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AcountId")
                        .HasColumnType("bigint");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numbers")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SpecialNumber")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("AcountId")
                        .IsUnique();

                    b.HasIndex("Numbers")
                        .IsUnique();

                    b.ToTable("Credits");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccountNumberReceiver")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("AccountNumberSender")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<long>("AcountReceiverId")
                        .HasColumnType("bigint");

                    b.Property<long>("AcountSenderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AcountReceiverId");

                    b.HasIndex("AcountSenderId");

                    b.ToTable("TransacionHistory");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ClientNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PeselHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PeselSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientNumber")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Acount", b =>
                {
                    b.HasOne("Bankowosc.Server.Entities.User", "User")
                        .WithOne("Acount")
                        .HasForeignKey("Bankowosc.Server.Entities.Acount", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.CreditCard", b =>
                {
                    b.HasOne("Bankowosc.Server.Entities.Acount", "Acount")
                        .WithOne("CreditCard")
                        .HasForeignKey("Bankowosc.Server.Entities.CreditCard", "AcountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acount");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Transaction", b =>
                {
                    b.HasOne("Bankowosc.Server.Entities.Acount", "AcountReceiver")
                        .WithMany("TransactionReceived")
                        .HasForeignKey("AcountReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Bankowosc.Server.Entities.Acount", "AcountSender")
                        .WithMany("TransactionSend")
                        .HasForeignKey("AcountSenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcountReceiver");

                    b.Navigation("AcountSender");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.Acount", b =>
                {
                    b.Navigation("CreditCard")
                        .IsRequired();

                    b.Navigation("TransactionReceived");

                    b.Navigation("TransactionSend");
                });

            modelBuilder.Entity("Bankowosc.Server.Entities.User", b =>
                {
                    b.Navigation("Acount")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
