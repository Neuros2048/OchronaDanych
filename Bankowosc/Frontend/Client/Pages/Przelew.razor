@page "/przelew"
@attribute [Authorize]
@inject NavigationManager NavigationManager
@inject IBanService _BanService
@attribute [Authorize]
<h3>Przelew</h3>

<style>
    .valid.modified:not([type=checkbox]) {
        outline: 1px solid #26b050;
    }

    .invalid {
        outline: 1px solid red;
    }

    .validation-message {
        color: red;
    }
</style>

<EditForm Model="transactionDto" OnValidSubmit="HandlePrzelew">
    <DataAnnotationsValidator />
    <ValidationSummary />
     <div class="form-group">
                <p>Tytuł:</p>
        <InputText  @bind-Value="@transactionDto.Tytul" class="form-control"></InputText>
            </div>
        <div class="form-group">
            <p>Numer rachunku odbiorcy:</p>
    <InputText  @bind-Value="@transactionDto.KontoOdbiorcy" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <p>Kwota:</p>
    <InputNumber @bind-Value="transactionDto.Kwota"   class="form-control" HtmlAttributes="@htmlattribute" id="kwota"></InputNumber>
        </div>
    
   
        <button type="submit" class="btn btn-primary w-100 my-4 mb-2">Dokonaj przelewu</button>
       
</EditForm>

<h3>@message</h3>



@code {
    private MakeTransactionDto transactionDto = new MakeTransactionDto();

    private string message = string.Empty;
    
    private async Task HandlePrzelew()
    {
        
        bool res = await _BanService.MakeTransaction(transactionDto);
        if (res)
        {
            NavigationManager.NavigateTo("/history");
            
        }
        transactionDto.Kwota = 0;
        message = "nie udało się dokonać tranzakci";

    }

    Dictionary<string, object> htmlattribute = new Dictionary<string, object>()
    {
           { "maxlength", "5" },
    };

}
